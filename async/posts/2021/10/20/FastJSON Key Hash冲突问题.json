{"tags":[{"name":"JAVA","permalink":"http://blog.hellolc.com/tags/JAVA/","url":"/async/tags/JAVA.json","count":1}],"categories":[],"url":"/async/posts/2021/10/20/FastJSON Key Hash冲突问题.json","date":1634740915000,"path":{"year":2021,"month":10,"day":20,"name":"FastJSON Key Hash冲突问题"},"title":"FastJSON Key Hash冲突问题","permalink":"http://blog.hellolc.com/2021/10/20/FastJSON Key Hash冲突问题/","content":"<h1 id=\"一、背景介绍\"><a href=\"#一、背景介绍\" class=\"headerlink\" title=\"一、背景介绍\"></a>一、背景介绍</h1><p>背景需求是这样的， 需要将下面的json字符串转换成TopicOutputItem对象，对象的字段在字符串里都是有的， 但是解析后， 发现其他字段都可以成功获取， 唯独topic字段是空的。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;__topic__&quot;:&quot;&quot;,&quot;outputReqs&quot;:&quot;0.0&quot;,&quot;__tag__:__receive_time__&quot;:&quot;1644412388&quot;,&quot;__tag__:__user_defined_id__&quot;:&quot;xxx&quot;,&quot;outputBytes&quot;:&quot;0.0&quot;,&quot;userId&quot;:&quot;xxxx&quot;,&quot;outputConvs&quot;:&quot;0.0&quot;,&quot;instanceId&quot;:&quot;xxx&quot;,&quot;__tag__:__hostname__&quot;:&quot;xxx&quot;,&quot;name&quot;:&quot;topicOutputItem&quot;,&quot;outputFailedReqs&quot;:&quot;0.0&quot;,&quot;topic&quot;:&quot;test&quot;,&quot;time&quot;:&quot;1644412385458&quot;,&quot;logtime&quot;:1644412385,&quot;__tag__:__path__&quot;:&quot;&quot;,&quot;__tag__:__pack_id__&quot;:&quot;&quot;&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class TopicOutputItem &#123;</span><br><span class=\"line\">    private String topic;</span><br><span class=\"line\">    private double outputBytes;</span><br><span class=\"line\">    private double outputReqs;</span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    private String instanceId;</span><br><span class=\"line\">    private String userId;</span><br><span class=\"line\">    private Long time;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"二、问题分析\"><a href=\"#二、问题分析\" class=\"headerlink\" title=\"二、问题分析\"></a>二、问题分析</h1><p>这个字符串数据是从sls上获取的， 原本json字符串只有我对象的字段， 但从sls获取时， 被加上了很多sls内部字段， 都是以<strong>开头， 比如</strong>topic__。刚好此值是空的， 因此我把这个值手动赋值后， 居然能成功映射到对象的topic上， 因此断定fastJson解析逻辑出了问题， 因此顺着fastJson源码找了一下原因。</p>\n<h2 id=\"解析流程\"><a href=\"#解析流程\" class=\"headerlink\" title=\"解析流程\"></a>解析流程</h2><p>首先了解一下fastJson解析的大致流程，fastJson的代码比较冗长， 但主要分为3个步骤</p>\n<ol>\n<li>通过ASM获取我们的对象的字节码</li>\n<li>然后按顺序匹配json字符串<br><img src=\"https://img.alicdn.com/imgextra/i3/O1CN01c87GSQ1XgykoBSkk2_!!6000000002954-2-tps-1500-495.png\" alt=\"image.png\"><br><img src=\"https://img.alicdn.com/imgextra/i3/O1CN01rXk4hy1CBjnmBKGIk_!!6000000000043-2-tps-1500-437.png\" alt=\"image.png\"></li>\n<li>将从字符串上获取的key和value，赋值到对象上<br><img src=\"https://img.alicdn.com/imgextra/i3/O1CN01KMixU71o9PBZndNfK_!!6000000005182-2-tps-976-670.png\" alt=\"image.png\"><br>所以问题应该出在匹配json字符串上。</li>\n</ol>\n<h2 id=\"匹配逻辑：\"><a href=\"#匹配逻辑：\" class=\"headerlink\" title=\"匹配逻辑：\"></a>匹配逻辑：</h2><ol>\n<li>fastJson会先获取json字符串的第一个key， 就是<strong>topic</strong>，然后与asm字节码对象匹配是否有对应的key</li>\n<li>发现所有对象都不匹配，fastJson默认会使用smartMatch方式再进行匹配key</li>\n<li>smartMatch方式会使用key的hash进行匹配，理论上topic和<strong>topic</strong>不会发生hash冲突， 但是这个hash获取方式比较奇怪， 会过滤掉”_”， 因此导致这两者的hash会一致。</li>\n<li>一旦获取到值后， 即使后面再匹配上topic，也会被跳过，因此最终导致数据错了。</li>\n</ol>\n<h1 id=\"三、解决方法\"><a href=\"#三、解决方法\" class=\"headerlink\" title=\"三、解决方法\"></a>三、解决方法</h1><h2 id=\"方案一\"><a href=\"#方案一\" class=\"headerlink\" title=\"方案一\"></a>方案一</h2><p>通过传递 Feature.DisableFieldSmartMatch 关闭smartMatch功能。<br>这种方案， 不敢全局配置， 只能每次调用解析时进行关闭，只能暂时解决我遇到的问题。</p>\n<h2 id=\"方案二\"><a href=\"#方案二\" class=\"headerlink\" title=\"方案二\"></a>方案二</h2><p>提前过滤掉多余字符字段， 或是将顺序调整至后面。<br>咨询了一下sls的同学， 这些字段无法自动去除， 只能自己手动去除。</p>\n"}