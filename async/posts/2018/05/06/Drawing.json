{"tags":[{"name":"Core HTML5 Canvas","permalink":"http://blog.hellolc.com/tags/Core-HTML5-Canvas/","url":"/async/tags/Core HTML5 Canvas.json","count":2}],"categories":[],"url":"/async/posts/2018/05/06/Drawing.json","date":1525597248000,"path":{"year":2018,"month":5,"day":6,"name":"Drawing"},"title":"Drawing","permalink":"http://blog.hellolc.com/2018/05/06/Drawing/","content":"<h2 id=\"createLinearGradient-oriX-oriY-desX-desY\"><a href=\"#createLinearGradient-oriX-oriY-desX-desY\" class=\"headerlink\" title=\"createLinearGradient(oriX, oriY, desX, desY)\"></a>createLinearGradient(oriX, oriY, desX, desY)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> canvas = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'canvas'</span>),</span><br><span class=\"line\">    context = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createLinearGradient</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> linearGradient = context.createLinearGradient(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</span><br><span class=\"line\"></span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0</span>, <span class=\"string\">'blue'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0.25</span>, <span class=\"string\">'yellow'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0.5</span>, <span class=\"string\">'green'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0.75</span>, <span class=\"string\">'white'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">1</span>, <span class=\"string\">'black'</span>);</span><br><span class=\"line\">    context.fillStyle = linearGradient;</span><br><span class=\"line\">    context.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createLinearGradient()</span><br></pre></td></tr></table></figure>\n<h2 id=\"createRadialGradient-oriX-oriY-oriR-desX-desY-desR\"><a href=\"#createRadialGradient-oriX-oriY-oriR-desX-desY-desR\" class=\"headerlink\" title=\"createRadialGradient(oriX, oriY, oriR, desX, desY, desR)\"></a>createRadialGradient(oriX, oriY, oriR, desX, desY, desR)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createRadialGradient</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> linearGradient = context.createRadialGradient(canvas.width / <span class=\"number\">2</span>, canvas.height, <span class=\"number\">10</span>, canvas.width / <span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0</span>, <span class=\"string\">'blue'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0.25</span>, <span class=\"string\">'yellow'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0.5</span>, <span class=\"string\">'green'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">0.75</span>, <span class=\"string\">'white'</span>);</span><br><span class=\"line\">    linearGradient.addColorStop(<span class=\"number\">1</span>, <span class=\"string\">'black'</span>);</span><br><span class=\"line\">    context.fillStyle = linearGradient;</span><br><span class=\"line\">    context.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createRadialGradient()</span><br></pre></td></tr></table></figure>\n<h2 id=\"createPattern-HTMLImageElement-HTMLCanvasElement-HTMLVideoElement-image-‘repeat-repeat-x-repeat-y-no-repeat’\"><a href=\"#createPattern-HTMLImageElement-HTMLCanvasElement-HTMLVideoElement-image-‘repeat-repeat-x-repeat-y-no-repeat’\" class=\"headerlink\" title=\"createPattern(HTMLImageElement | HTMLCanvasElement | HTMLVideoElement image, ‘repeat|repeat-x|repeat-y|no-repeat’)\"></a>createPattern(HTMLImageElement | HTMLCanvasElement | HTMLVideoElement image, ‘repeat|repeat-x|repeat-y|no-repeat’)</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createCanvasPattern</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> SHADOW_COLOR = <span class=\"string\">'rgba(0,0,0,0.7)'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> image  = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">    image.src = <span class=\"string\">\"https://img.alicdn.com/tfs/TB1sLMKe8fH8KJjy1XbXXbLdXXa-300-300.jpg\"</span>;</span><br><span class=\"line\">    image.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> pattern = context.createPattern(image, <span class=\"string\">\"no-repeat\"</span>);</span><br><span class=\"line\">        context.clearRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</span><br><span class=\"line\">        context.fillStyle = pattern;</span><br><span class=\"line\">        context.shadowColor = SHADOW_COLOR;</span><br><span class=\"line\">        context.shadowOffsetX = <span class=\"number\">10</span>;</span><br><span class=\"line\">        context.shadowOffsetY = <span class=\"number\">10</span>;</span><br><span class=\"line\">        context.shadowBlur = <span class=\"number\">10</span>;</span><br><span class=\"line\">        context.fillRect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, canvas.width, canvas.height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createCanvasPattern();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Paths-Stroking-and-Filling\"><a href=\"#Paths-Stroking-and-Filling\" class=\"headerlink\" title=\"Paths, Stroking, and Filling\"></a>Paths, Stroking, and Filling</h2><ul>\n<li>arc(x, y, r, oriPI, desPI, true/false(是否顺时针))</li>\n<li>beginPath() 开始新的路径绘图</li>\n<li>closePath() 闭合路径</li>\n<li>fill() 根据fillStyle填充图形</li>\n<li>rect(double x, double y, double width, double height) 绘制矩形路径</li>\n<li>stroke() 根据strokeStyle绘制路径</li>\n</ul>\n<h2 id=\"划线\"><a href=\"#划线\" class=\"headerlink\" title=\"划线\"></a>划线</h2><blockquote>\n<p>如果1px宽度的线刚好落在像素的边界上, 会导致线的宽度变成2px</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context.lineWidth = <span class=\"number\">1</span>;</span><br><span class=\"line\">context.beginPath();</span><br><span class=\"line\">context.moveTo(<span class=\"number\">50</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">context.lineTo(<span class=\"number\">450</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">context.stroke();</span><br><span class=\"line\">context.beginPath();</span><br><span class=\"line\">context.moveTo(<span class=\"number\">50.5</span>, <span class=\"number\">50.5</span>);</span><br><span class=\"line\">context.lineTo(<span class=\"number\">350.5</span>, <span class=\"number\">50.5</span>);</span><br><span class=\"line\">context.stroke();</span><br></pre></td></tr></table></figure>\n<h2 id=\"划虚线\"><a href=\"#划虚线\" class=\"headerlink\" title=\"划虚线\"></a>划虚线</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawDashedLine</span>(<span class=\"params\">context, x1, y1, x2, y2, dashLen = <span class=\"number\">5</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dx = x2 - x1;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dy = y2 - y1;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> dashNum = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dx === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        dashNum = <span class=\"built_in\">Math</span>.abs(dy / dashLen);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (dy === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        dashNum = <span class=\"built_in\">Math</span>.abs(dx / dashLen);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        dashNum = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.sqrt(dx * dx, dy * dy) / dashLen);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    context.beginPath();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; dashNum; i++) &#123;</span><br><span class=\"line\">        context[i % <span class=\"number\">2</span> === <span class=\"number\">0</span> ? <span class=\"string\">\"lineTo\"</span> : <span class=\"string\">\"moveTo\"</span>](x1 + dx / dashNum * i, y1 + dy / dashNum * i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    context.stroke();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">drawDashedLine(context, <span class=\"number\">20</span>, <span class=\"number\">20</span>, <span class=\"number\">220</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">drawDashedLine(context, <span class=\"number\">220</span>, <span class=\"number\">20</span>, <span class=\"number\">220</span>, <span class=\"number\">280</span>);</span><br><span class=\"line\">drawDashedLine(context, <span class=\"number\">220</span>, <span class=\"number\">280</span>, <span class=\"number\">20</span>, <span class=\"number\">280</span>);</span><br><span class=\"line\">drawDashedLine(context, <span class=\"number\">20</span>, <span class=\"number\">280</span>, <span class=\"number\">20</span>, <span class=\"number\">20</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"CanvasRenderingContext2D\"><a href=\"#CanvasRenderingContext2D\" class=\"headerlink\" title=\"CanvasRenderingContext2D\"></a>CanvasRenderingContext2D</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> moveToFunction = CanvasRenderingContext2D.prototype.moveTo;</span><br><span class=\"line\">    CanvasRenderingContext2D.prototype.lastMoveToLocation = &#123;&#125;;</span><br><span class=\"line\">    CanvasRenderingContext2D.prototype.moveTo = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x, y</span>) </span>&#123;</span><br><span class=\"line\">        moveToFunction.apply(context, [x,y]);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lastMoveToLocation.x = x;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lastMoveToLocation.y = y;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    CanvasRenderingContext2D.prototype.dashedLineTo = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">x, y, dashLength</span>) </span>&#123;</span><br><span class=\"line\">        dashLength = dashLength === <span class=\"literal\">undefined</span> ? <span class=\"number\">5</span> : dashLength;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> startX = <span class=\"keyword\">this</span>.lastMoveToLocation.x;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> startY = <span class=\"keyword\">this</span>.lastMoveToLocation.y;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> deltaX = x - startX;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> deltaY = y - startY;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> numDashes = <span class=\"built_in\">Math</span>.floor(<span class=\"built_in\">Math</span>.sqrt(deltaX * deltaX</span><br><span class=\"line\">                                    + deltaY * deltaY) / dashLength);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>; i &lt; numDashes; ++i) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>[ i % <span class=\"number\">2</span> === <span class=\"number\">0</span> ? <span class=\"string\">'moveTo'</span> : <span class=\"string\">'lineTo'</span> ]</span><br><span class=\"line\">                (startX + (deltaX / numDashes) * i,</span><br><span class=\"line\">                    startY + (deltaY / numDashes) * i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.moveTo(x, y);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    context.lineWidth = <span class=\"number\">3</span>;</span><br><span class=\"line\">    context.strokeStyle = <span class=\"string\">'blue'</span>;</span><br><span class=\"line\">    context.moveTo(<span class=\"number\">20</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">    context.dashedLineTo(context.canvas.width<span class=\"number\">-20</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">    context.dashedLineTo(context.canvas.width<span class=\"number\">-20</span>,</span><br><span class=\"line\">                        context.canvas.height<span class=\"number\">-20</span>);</span><br><span class=\"line\">    context.dashedLineTo(<span class=\"number\">20</span>, context.canvas.height<span class=\"number\">-20</span>);</span><br><span class=\"line\">    context.dashedLineTo(<span class=\"number\">20</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">    context.dashedLineTo(context.canvas.width<span class=\"number\">-20</span>,</span><br><span class=\"line\">    context.canvas.height<span class=\"number\">-20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    context.stroke();</span><br></pre></td></tr></table></figure>\n<h2 id=\"Line-joins\"><a href=\"#Line-joins\" class=\"headerlink\" title=\"Line joins\"></a>Line joins</h2><ul>\n<li>miter(default)</li>\n<li>bevel</li>\n<li>round</li>\n</ul>\n<h3 id=\"arcTo-x1-y1-x2-y2-radius\"><a href=\"#arcTo-x1-y1-x2-y2-radius\" class=\"headerlink\" title=\"arcTo(x1, y1, x2, y2, radius)\"></a>arcTo(x1, y1, x2, y2, radius)</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">roundedRect</span>(<span class=\"params\">cornerX, cornerY,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            width, height, cornerRadius</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (width &gt; <span class=\"number\">0</span>) </span><br><span class=\"line\">                context.moveTo(cornerX + cornerRadius, cornerY);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> </span><br><span class=\"line\">                context.moveTo(cornerX - cornerRadius, cornerY);</span><br><span class=\"line\">                </span><br><span class=\"line\">            context.arcTo(cornerX + width, cornerY,</span><br><span class=\"line\">                cornerX + width, cornerY + height,</span><br><span class=\"line\">                cornerRadius);</span><br><span class=\"line\">            context.arcTo(cornerX + width, cornerY + height,</span><br><span class=\"line\">                cornerX, cornerY + height,</span><br><span class=\"line\">                cornerRadius);</span><br><span class=\"line\">            context.arcTo(cornerX, cornerY + height,</span><br><span class=\"line\">                cornerX, cornerY,</span><br><span class=\"line\">                cornerRadius);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (width &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                context.arcTo(cornerX, cornerY,</span><br><span class=\"line\">                    cornerX + cornerRadius, cornerY,</span><br><span class=\"line\">                    cornerRadius);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                context.arcTo(cornerX, cornerY,</span><br><span class=\"line\">                    cornerX - cornerRadius, cornerY,</span><br><span class=\"line\">                    cornerRadius);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawRoundedRect</span>(<span class=\"params\">strokeStyle, fillStyle, cornerX, cornerY,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            width, height, cornerRadius</span>) </span>&#123;</span><br><span class=\"line\">            context.beginPath();</span><br><span class=\"line\">            roundedRect(cornerX, cornerY, width, height, cornerRadius);</span><br><span class=\"line\">            context.strokeStyle = strokeStyle;</span><br><span class=\"line\">            context.fillStyle = fillStyle;</span><br><span class=\"line\">            context.stroke();</span><br><span class=\"line\">            context.fill();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        drawRoundedRect(<span class=\"string\">'blue'</span>,   <span class=\"string\">'yellow'</span>,  <span class=\"number\">50</span>,  <span class=\"number\">40</span>,  <span class=\"number\">100</span>,  <span class=\"number\">100</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">        drawRoundedRect(<span class=\"string\">'purple'</span>, <span class=\"string\">'green'</span>,  <span class=\"number\">275</span>,  <span class=\"number\">40</span>, <span class=\"number\">-100</span>,  <span class=\"number\">100</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\">        drawRoundedRect(<span class=\"string\">'red'</span>,    <span class=\"string\">'white'</span>,  <span class=\"number\">300</span>, <span class=\"number\">140</span>,  <span class=\"number\">100</span>, <span class=\"number\">-100</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        drawRoundedRect(<span class=\"string\">'white'</span>,  <span class=\"string\">'blue'</span>,   <span class=\"number\">525</span>, <span class=\"number\">140</span>, <span class=\"number\">-100</span>, <span class=\"number\">-100</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)()</span><br></pre></td></tr></table></figure>"}