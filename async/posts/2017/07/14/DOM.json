{"tags":[{"name":"javaScript高级程序设计笔记","permalink":"http://blog.hellolc.com/tags/javaScript高级程序设计笔记/","url":"/async/tags/javaScript高级程序设计笔记.json","count":6}],"categories":[],"url":"/async/posts/2017/07/14/DOM.json","date":1499996607000,"path":{"year":2017,"month":7,"day":14,"name":"DOM"},"title":"DOM","permalink":"http://blog.hellolc.com/2017/07/14/DOM/","content":"<h2 id=\"节点层次\"><a href=\"#节点层次\" class=\"headerlink\" title=\"节点层次\"></a>节点层次</h2><blockquote>\n<p>如下, 最外层的节点<html>, 称为文档元素, 每个文档只能有一个文档元素;<br>在html页面中, 文档元素始终都是<html>元素;</html></html></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">  &lt;head&gt;</div><div class=\"line\">    &lt;title&gt;Home&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">    &lt;p&gt;hello wolrd!&lt;/p&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"Node类型\"><a href=\"#Node类型\" class=\"headerlink\" title=\"Node类型\"></a>Node类型</h3><blockquote>\n<p>节点类型如下:</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">Node.ELEMENT_NODE(1);</div><div class=\"line\">Node.ATTRIBUTE_NODE(2);</div><div class=\"line\">Node.TEXT_NODE(3);</div><div class=\"line\">Node.CDATA_SECTION_NODE(4);</div><div class=\"line\">Node.ENTITY_REFERENCE_NODE(5);</div><div class=\"line\">Node.ENTITY_NODE(6);</div><div class=\"line\">Node.PROCESSING_INSTRUCTION_NODE(7);</div><div class=\"line\">Node.COMMENT_NODE(8);</div><div class=\"line\">Node.DOCUMENT_NODE(9);</div><div class=\"line\">Node.DOCUMENT_TYPE_NODE(10);</div><div class=\"line\">Node.DOCUMENT_FRAGMENT_NODE(11);</div><div class=\"line\">Node.NOTATION_NODE(12);</div><div class=\"line\"></div><div class=\"line\">//可以通过如下方式判断</div><div class=\"line\">if (someNode.nodeType == 1) &#123;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"nodeName和nodeValue属性\"><a href=\"#nodeName和nodeValue属性\" class=\"headerlink\" title=\"nodeName和nodeValue属性\"></a>nodeName和nodeValue属性</h3><blockquote>\n<p><code>nodeName</code>元素的标签名, <code>nodeValue</code>节点值</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var someNode = document.getElementById(&apos;html&apos;);</div><div class=\"line\">someNode.nodeName;//&quot;html&quot;</div><div class=\"line\">someNode.nodeValue;//null</div></pre></td></tr></table></figure>\n<h3 id=\"节点关系\"><a href=\"#节点关系\" class=\"headerlink\" title=\"节点关系\"></a>节点关系</h3><blockquote>\n<p>每个节点都有一个childNodes属性, 保存着一个NodeList对象, NodeList是一种类数组对象(有length属性, 但不是数组);<br>可以通过previousSibling和nextSibling属性, 可以访问同一列表中的相邻其他节点.<br>firstChild获取第一个节点, lastChild获取最后一个节点;<br>parentNode可以获取父节点;<br>hasChildNodes()可以判断是否有子节点;<br>所有节点都有一个属性是ownerDocument, 该属性指向整个文档的文档节点, 即: docuemnt;<br>以下为获取NoeList中的节点方法</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var firstChild = someNode.childNodes[0];</div><div class=\"line\">var secondChild = someNode.childNodes.item(1);</div><div class=\"line\"></div><div class=\"line\">firstChild.nextSibling == secondChild;//true</div><div class=\"line\">secondChild.previousSibling == firstChild;//true</div><div class=\"line\">someNode.firstChild == firstChild//true</div><div class=\"line\">someNode.lastChild == someNode.childNodes[someNode.childNodes.length - 1]; //true</div><div class=\"line\">someNode.firstChild.parentNode == someNode;//true</div></pre></td></tr></table></figure>\n<blockquote>\n<p>由于NodeList是类数组, 可以通过Array.prototype.slice.call(NodeList, 0)方式转换为数组, 但是需要IE8以上, 因为IE8及一下是DOM是用COM对象实现的, 不是JScript;</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function convertToArray(nodes) &#123;</div><div class=\"line\">  var array = [];</div><div class=\"line\">  try &#123;</div><div class=\"line\">    array = Array.prototype.slice.call(nodes, 0);//针对非IE浏览器</div><div class=\"line\">  &#125; catch (ex) &#123;</div><div class=\"line\">    for (var i=0, len=nodes.length; i &lt; len; i++) &#123;</div><div class=\"line\">      array.push(nodes[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  return array;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"操作节点\"><a href=\"#操作节点\" class=\"headerlink\" title=\"操作节点\"></a>操作节点</h3><blockquote>\n<p>appendChild()想childNodes列表的末尾添加一个节点;<br>insertBefore(要插入的节点, 参照的节点); 可以把节点放在childNodes列表中某个特定的位置上, 如果参照节点为null, 则insertBefore与appendChild执行相同的操作;<br>replaceChild(要插入的节点, 替换节点);<br>removeChild(要移除的节点);</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">var returnedNode = someNodes.appendChild(newNode);</div><div class=\"line\">returnedNode == newNode; //true</div><div class=\"line\">someNodes.lastChild == newNode; //true</div><div class=\"line\"></div><div class=\"line\">//在末尾插入</div><div class=\"line\">someNodes.insertBefore(newNode, null);</div><div class=\"line\">someNodes.lastChild == newNode; //true</div><div class=\"line\"></div><div class=\"line\">//插入到第一个</div><div class=\"line\">someNodes.insertBefore(newNode, newNode.firstChild);</div><div class=\"line\">someNodes.firstChild == newNode; //true</div><div class=\"line\"></div><div class=\"line\">//替换第一个节点</div><div class=\"line\">someNodes.replaceChild(newNode, someNodes.firstChild);</div><div class=\"line\"></div><div class=\"line\">//移除第一个节点</div><div class=\"line\">someNodes.removeChild(someNodes.firstChild);</div></pre></td></tr></table></figure>\n<h3 id=\"其他方法\"><a href=\"#其他方法\" class=\"headerlink\" title=\"其他方法\"></a>其他方法</h3><blockquote>\n<p>cloneNode(是否深复制子节点)克隆节点; 当传递为true时, 会复制节点自身和它的子节点, 否则只复制自身, 复制后返回的节点副本属于文档所有, 但并没有为它指定父节点. 需要通过appendChild(), insertBefore()或replaceChild()将它添加到文档中. cloneNode()不会复制DOM节点中的JavaScript属性, 例如事件处理程序等.IE在此存在一个bug, 即它会复制事件处理程序, 所以我们建议在复制之前最好先移除事件处理程序;<br>normalize()处理文档树中的文本节点, 删除节点的后代节点中的空文本节点, 或是将相邻的文本节点, 合并为一个文本节点.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">  &lt;li&gt;item 1&lt;/item&gt;</div><div class=\"line\">  &lt;li&gt;item 2&lt;/item&gt;</div><div class=\"line\">  &lt;li&gt;item 3&lt;/item&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">var deepList = myList.cloneNode(true);</div><div class=\"line\">console.log(deepList.childNodes.length);//3(IE&lt;9)或7(其他浏览器)</div><div class=\"line\"></div><div class=\"line\">var shallowList = myList.cloneNode(false);</div><div class=\"line\">console.log(shallowList.childNodes.length);//0</div></pre></td></tr></table></figure>\n<h2 id=\"document类型\"><a href=\"#document类型\" class=\"headerlink\" title=\"document类型\"></a>document类型</h2><blockquote>\n<p>document是HTMLDocument的一个实例</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">document.nodeType//9</div><div class=\"line\">document.nodeName //#document</div><div class=\"line\">document.nodeValue//null</div><div class=\"line\">document.parentNode//null</div><div class=\"line\">document.ownerDocument//null</div></pre></td></tr></table></figure>\n<h3 id=\"文档的子节点\"><a href=\"#文档的子节点\" class=\"headerlink\" title=\"文档的子节点\"></a>文档的子节点</h3><ul>\n<li>document.documentElement</li>\n<li>document.body</li>\n<li>document.doctype(只读), 各浏览器对其是否解析为document的子节点各不相同</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;html&gt;</div><div class=\"line\">  &lt;head&gt;&lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;&lt;/body&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\"></div><div class=\"line\">document.childNodes[0] === document.documentElement //true</div></pre></td></tr></table></figure>\n<h3 id=\"文档信息\"><a href=\"#文档信息\" class=\"headerlink\" title=\"文档信息\"></a>文档信息</h3><ul>\n<li>document.title 获取标题信息, 修改标题</li>\n<li>document.URL(只读) 当前地址</li>\n<li>document.referrer(只读) 来源网站的URL</li>\n<li>document.domain<blockquote>\n<p>由于安全方面的限制, 这个值只能设置为URL中的子域名, 比如:www.test.com只能设置为test.com;<br>这个值的用处是, 当一个页面嵌套一个同域子页面时, 如果要想通过JavaScript进行通信, 则必须将两个页面的document.domain设置为同一个域, 才可以进行通信;</p>\n</blockquote>\n</li>\n</ul>\n"}