{"tags":[{"name":"javaScript高级程序设计笔记","permalink":"http://blog.hellolc.com,http://www.wjcun.com/tags/javaScript高级程序设计笔记/","url":"/async/tags/javaScript高级程序设计笔记.json","count":17}],"categories":[],"url":"/async/posts/2017/08/05/dom23.json","date":1501913935000,"path":{"year":2017,"month":8,"day":5,"name":"dom23"},"title":"DOM2和DOM3","permalink":"http://blog.hellolc.com,http://www.wjcun.com/2017/08/05/dom23/","content":"<h2 id=\"检测DOM等级方法\"><a href=\"#检测DOM等级方法\" class=\"headerlink\" title=\"检测DOM等级方法\"></a>检测DOM等级方法</h2><ul>\n<li>document.implementation.hasFeature(属性名, 等级)<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.implementation.hasFeature(&quot;MouseEvents&quot;, &quot;2.0&quot;);//检测MouseEvents是否支持DOM2.0</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"DOM变化\"><a href=\"#DOM变化\" class=\"headerlink\" title=\"DOM变化\"></a>DOM变化</h2><h3 id=\"document类型的变化\"><a href=\"#document类型的变化\" class=\"headerlink\" title=\"document类型的变化\"></a>document类型的变化</h3><ul>\n<li>createElementNS(namespaceURI, tagName) 使用给定的tagName创建一个属于命名空间为namespaceURI的新元素</li>\n<li>createAtrributeNS(namespaceURI, attributeName) 使用给定的attributeName创建一个属于命名空间namespaceURI的新特性</li>\n<li>getElementsByTagNameNS(namespaceURI, tagName) 返回属于命名空间namespaceURI的tagName元素的NodeList</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var svg = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;svg&quot;);</span><br><span class=\"line\">var attr = document.createAtrributeNS(&quot;http://wwww.somewhere.com&quot;, &quot;random&quot;);</span><br><span class=\"line\">var elements = document.getElementsByTagNameNS(&quot;http://www.w3.org/2000/xhtml&quot;, &quot;*&quot;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>importNode(节点对象, 是否深复制) 这个方法功能和cloneNode()非常类似, 使用cloneNode()从别的文档树种拷贝的节点, 会导致错误, 所以使用importNode, 就能保证拷贝过来的新节点的onwerDocuemnt属性, 是指向当前文档树的</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var newNode = document.importNode(oldNode, true);</span><br><span class=\"line\">document.body.appendChild(newNode);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>document.implementation.createHTMLDocument(新标题) 创建一个完整的html文档</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var newHtml = document.implementation.createHTMLDocument(&quot;new title&quot;);</span><br><span class=\"line\">newHtml.title; //new title</span><br><span class=\"line\">typeof newHtml.body; //object</span><br></pre></td></tr></table></figure>\n<h3 id=\"Node-类型的变化\"><a href=\"#Node-类型的变化\" class=\"headerlink\" title=\"Node 类型的变化\"></a>Node 类型的变化</h3><ul>\n<li>isSameNode(比较节点) 节点相同, 同一个对象</li>\n<li>isEqualNode(比较节点) 节点相等, 具有相同的属性(nodeName, nodeValue等)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var div1 = document.createElement(&quot;div&quot;);</span><br><span class=\"line\">div1.setAttribute(&quot;class&quot;, &quot;box&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">var div2 = document.createElement(&quot;div&quot;);</span><br><span class=\"line\">div2.setAttribute(&quot;class&quot;, &quot;box&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">div1.isSameNode(div1);//true</span><br><span class=\"line\">div1.isEqualNode(div2);//true</span><br><span class=\"line\">div1.isSameNode(div2);//false</span><br></pre></td></tr></table></figure>\n<ul>\n<li>setUserData()将数据指定给节点, 它接受3个参数, 要设置的键, 实际的值(可以是任务数据类型)和处理函数, 处理函数接受5个参数, 分别表示操作类型的数值(1表示复制, 2表示导入, 3表示删除, 4表示重命名), 数据键, 数据值, 源节点和目标节点</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var div = document.createElement(&quot;div&quot;);</span><br><span class=\"line\">div.setUserData(&quot;name&quot;, &quot;James&quot;, function(operation, key, value, src, desc) &#123;</span><br><span class=\"line\">\tif (operation == 1) &#123;</span><br><span class=\"line\">\t\tdesc.setUserData(key, value, function() &#123;&#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">var newDiv = div.cloneNode(true);</span><br><span class=\"line\">newNode.getUserData(&quot;name&quot;);//James</span><br></pre></td></tr></table></figure>\n<h3 id=\"框架变化\"><a href=\"#框架变化\" class=\"headerlink\" title=\"框架变化\"></a>框架变化</h3><ul>\n<li>contentDocument 指向表示框架内容的文档对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var iframe = document.getElementsById(&quot;myIframe&quot;);</span><br><span class=\"line\">var iframeDoc = iframe.contentDocument || iframe.contentWindow.document;</span><br></pre></td></tr></table></figure>\n<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><h3 id=\"访问元素样式\"><a href=\"#访问元素样式\" class=\"headerlink\" title=\"访问元素样式\"></a>访问元素样式</h3><ul>\n<li>getPropertyCSSValue(propertyName)</li>\n<li>getPropertyValue(propertyName)</li>\n<li>cssText </li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myDiv = document.getElementsByTagName(&quot;div&quot;)[0];</span><br><span class=\"line\">myDiv.style.cssText = &quot;font-size: 18px; background-color: red&quot;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"计算的样式\"><a href=\"#计算的样式\" class=\"headerlink\" title=\"计算的样式\"></a>计算的样式</h3><ul>\n<li><p>getComputedStyle 可以获取其他样式表层叠而来并影响到当前元素的样式信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class=\"line\">\t#myDiv &#123;</span><br><span class=\"line\">\t\twidth: 100px;</span><br><span class=\"line\">\t\theight: 100px;</span><br><span class=\"line\">\t\tbackground-color: blue;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">&lt;div id=&quot;myDiv&quot; style=&quot;background-color:red;&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">\tvar myDiv = document.getElementById(&quot;#myDiv&quot;);</span><br><span class=\"line\">\tvar computeStyle = document.defaultView.getComputedStyle(myDiv, null);</span><br><span class=\"line\">\tcomputeStyle.backgroundColor; //red</span><br><span class=\"line\">\tcomputeStyle.width;//100px;</span><br><span class=\"line\">\tcomputeStyle.height;//100px;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>currentStyle IE下使用此属性获取计算后的属性</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var myDiv = document.getElementById(&quot;#myDiv&quot;);</span><br><span class=\"line\">var currentStyle = myDiv.currentStyle;</span><br><span class=\"line\">currentStyle.backgroundColor;</span><br></pre></td></tr></table></figure>\n<h3 id=\"操作样式\"><a href=\"#操作样式\" class=\"headerlink\" title=\"操作样式\"></a>操作样式</h3><ul>\n<li>document.styleSheets 获取所有style样式</li>\n<li>sheet.deleteRule(索引)</li>\n<li>sheet.insertRule(规则文本, 插入规则的索引) 向现有样式表插入新规则</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var sheet = document.styleSheets[0];</span><br><span class=\"line\">sheet.insertRule(&quot;body &#123;max-width: 1000px;&#125;&quot;, 0);</span><br></pre></td></tr></table></figure>\n<h2 id=\"元素大小\"><a href=\"#元素大小\" class=\"headerlink\" title=\"元素大小\"></a>元素大小</h2><h3 id=\"偏移量\"><a href=\"#偏移量\" class=\"headerlink\" title=\"偏移量\"></a>偏移量</h3><ul>\n<li>offsetHeight 垂直空间上的占用像素, 包括元素的高度, (可见的)水平滚动条高度, 上边框高度和下边框高度</li>\n<li>offsetWidth 水平方向上的占用像素, 包括元素的宽度, (可见的)垂直滚动条宽度, 左边框和右边框的宽度</li>\n<li>offsetLeft 元素左外边框至包含元素的左内边框之间的像素距离</li>\n<li>offsetTop 元素上外边框至包含元素的上内边框之间的像素距离<br><img src=\"https://img.alicdn.com/tfs/TB1DpvFSFXXXXcqXXXXXXXXXXXX-1294-770.png\" alt=\"偏移量\"></li>\n</ul>\n<blockquote>\n<p>元素的offsetParent和parentNode不一定相等</p>\n<p>计算一个元素在页面上的偏移量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function getElementLeft(element) &#123;</span><br><span class=\"line\">\tvar actualLeft = element.offsetLeft;</span><br><span class=\"line\">\tvar currParent = element.offsetParent;</span><br><span class=\"line\"></span><br><span class=\"line\">\twhile (currParent != null) &#123;</span><br><span class=\"line\">\t\tactualLeft += currParent.offsetLeft;</span><br><span class=\"line\">\t\tcurrParent = currParent.offsetParent;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getElementTop(element) &#123;</span><br><span class=\"line\">\tvar actualTop = element.offsetTop;</span><br><span class=\"line\">\tvar currParent = element.offsetParent;</span><br><span class=\"line\"></span><br><span class=\"line\">\twhile (currParent != null) &#123;</span><br><span class=\"line\">\t\tactualTop += currParent.offsetTop;</span><br><span class=\"line\">\t\tcurrParent = currParent.offsetParent;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户区大小\"><a href=\"#客户区大小\" class=\"headerlink\" title=\"客户区大小\"></a>客户区大小</h3><ul>\n<li>clientWidth 内容区宽度+左右内边距的宽度</li>\n<li>clientHeight 内容区高度+上下内边距的高度</li>\n</ul>\n<p><img src=\"https://img.alicdn.com/tfs/TB1L8O2SFXXXXbQaXXXXXXXXXXX-1190-762.png\" alt=\"客户区大小\"></p>\n<blockquote>\n<p>浏览器视口大小</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function getViewport() &#123;</span><br><span class=\"line\">\t//兼容IE7以前</span><br><span class=\"line\">\tif (document.compatMode == &quot;BackCompat&quot;) &#123;</span><br><span class=\"line\">\t\treturn &#123;</span><br><span class=\"line\">\t\t\twidth: document.body.clientWidth,</span><br><span class=\"line\">\t\t\theight: document.body.clientHeight</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">\t\treturn &#123;</span><br><span class=\"line\">\t\t\twidth: document.documentElement.clientWidth,</span><br><span class=\"line\">\t\t\theight: document.documentElement.clientHeight</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"滚动大小\"><a href=\"#滚动大小\" class=\"headerlink\" title=\"滚动大小\"></a>滚动大小</h3><ul>\n<li>scrollHeight 没有滚动条的情况下, 元素内容的总高度</li>\n<li>scrollWidth 没有滚动条的情况下, 元素内容的总宽度</li>\n<li>scrollLeft 被隐藏在内容左侧的像素数, 可以通过改变此值来改变元素的滚动位置</li>\n<li>scrollTop 被隐藏的内容区域上方的像素数, 可以通过改变此值改变元素的滚动位置</li>\n</ul>\n<blockquote>\n<p>当页面大小没有超过视口大小时, <code>scrollHeight</code>与<code>clientHeight</code>, <code>scrollWidth</code>与<code>clientWidth</code>值相等;</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//chrome 下测试结果  各浏览器结果不一致, 为了兼容性 如果想获取文档高度, 应该取两值的最大值</span><br><span class=\"line\">document.documentElement.scrollHeight;// 2874 最个文档高度</span><br><span class=\"line\">document.documentElement.clientHeight;// 911 视口高度</span><br><span class=\"line\"></span><br><span class=\"line\">document.body.scrollHeight;// 2874 最个文档高度</span><br><span class=\"line\">document.body.clientHeight;// 2874 最个文档高度</span><br></pre></td></tr></table></figure>\n<h3 id=\"确定元素大小\"><a href=\"#确定元素大小\" class=\"headerlink\" title=\"确定元素大小\"></a>确定元素大小</h3><ul>\n<li>getBoundingClientRect() 获取元素left, right, top, bottom</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.documentElement.getBoundingClientRect()</span><br></pre></td></tr></table></figure>\n<h2 id=\"遍历\"><a href=\"#遍历\" class=\"headerlink\" title=\"遍历\"></a>遍历</h2><h3 id=\"NodeIterator\"><a href=\"#NodeIterator\" class=\"headerlink\" title=\"NodeIterator\"></a>NodeIterator</h3><ul>\n<li>document.createNodeIterator(起始节点, 要访问哪些节点的代码, nodeFilter对象, 是否要扩展实体引用)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var div = document.getElementById(&quot;div1&quot;);</span><br><span class=\"line\">var iterator = document.createNodeIterator(div, NodeFilter.SHOW_ELEMENT, null, false);</span><br><span class=\"line\">var node = iterator.nextNode();</span><br><span class=\"line\">while (node !== null) &#123;</span><br><span class=\"line\">\tconsole.log(node.tagName);</span><br><span class=\"line\">\tnode = iterator.nextNode();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"TreeWalker\"><a href=\"#TreeWalker\" class=\"headerlink\" title=\"TreeWalker\"></a>TreeWalker</h3><ul>\n<li>document.createTreeWalk(起始节点, 要访问哪些节点的代码, nodeFilter对象, 是否要扩展实体引用)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var div = document.getElementById(&quot;div1&quot;);</span><br><span class=\"line\">var filter = function(node) &#123;</span><br><span class=\"line\">\treturn node.tagName.toLowerCase() == &apos;li&apos; ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">var iterator = document.createTreeWalk(div, NodeFilter.SHOW_ELEMENT, filter, false);</span><br><span class=\"line\">var node = iterator.nextNode();</span><br><span class=\"line\">while (node !== null) &#123;</span><br><span class=\"line\">\tconsole.log(node.tagName);</span><br><span class=\"line\">\tnode = iterator.nextNode();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}