{"tags":[{"name":"javaScript高级程序设计笔记","permalink":"http://blog.hellolc.com/tags/javaScript高级程序设计笔记/","url":"/async/tags/javaScript高级程序设计笔记.json","count":8}],"categories":[],"url":"/async/posts/2017/08/05/dom23.json","date":1501913935000,"path":{"year":2017,"month":8,"day":5,"name":"dom23"},"title":"DOM2和DOM3","permalink":"http://blog.hellolc.com/2017/08/05/dom23/","content":"<h2 id=\"DOM变化\"><a href=\"#DOM变化\" class=\"headerlink\" title=\"DOM变化\"></a>DOM变化</h2><h3 id=\"document类型的变化\"><a href=\"#document类型的变化\" class=\"headerlink\" title=\"document类型的变化\"></a>document类型的变化</h3><ul>\n<li>createElementNS(namespaceURI, tagName) 使用给定的tagName创建一个属于命名空间为namespaceURI的新元素</li>\n<li>createAtrributeNS(namespaceURI, attributeName) 使用给定的attributeName创建一个属于命名空间namespaceURI的新特性</li>\n<li>getElementsByTagNameNS(namespaceURI, tagName) 返回属于命名空间namespaceURI的tagName元素的NodeList</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var svg = document.createElementNS(&quot;http://www.w3.org/2000/svg&quot;, &quot;svg&quot;);</div><div class=\"line\">var attr = document.createAtrributeNS(&quot;http://wwww.somewhere.com&quot;, &quot;random&quot;);</div><div class=\"line\">var elements = document.getElementsByTagNameNS(&quot;http://www.w3.org/2000/xhtml&quot;, &quot;*&quot;);</div></pre></td></tr></table></figure>\n<ul>\n<li>importNode(节点对象, 是否深复制) 这个方法功能和cloneNode()非常类似, 使用cloneNode()从别的文档树种拷贝的节点, 会导致错误, 所以使用importNode, 就能保证拷贝过来的新节点的onwerDocuemnt属性, 是指向当前文档树的</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var newNode = document.importNode(oldNode, true);</div><div class=\"line\">document.body.appendChild(newNode);</div></pre></td></tr></table></figure>\n<ul>\n<li>document.implementation.createHTMLDocument(新标题) 创建一个完整的html文档</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">var newHtml = document.implementation.createHTMLDocument(&quot;new title&quot;);</div><div class=\"line\">newHtml.title; //new title</div><div class=\"line\">typeof newHtml.body; //object</div></pre></td></tr></table></figure>\n<h3 id=\"Node-类型的变化\"><a href=\"#Node-类型的变化\" class=\"headerlink\" title=\"Node 类型的变化\"></a>Node 类型的变化</h3><ul>\n<li>isSameNode(比较节点) 节点相同, 同一个对象</li>\n<li>isEqualNode(比较节点) 节点相等, 具有相同的属性(nodeName, nodeValue等)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var div1 = document.createElement(&quot;div&quot;);</div><div class=\"line\">div1.setAttribute(&quot;class&quot;, &quot;box&quot;);</div><div class=\"line\"></div><div class=\"line\">var div2 = document.createElement(&quot;div&quot;);</div><div class=\"line\">div2.setAttribute(&quot;class&quot;, &quot;box&quot;);</div><div class=\"line\"></div><div class=\"line\">div1.isSameNode(div1);//true</div><div class=\"line\">div1.isEqualNode(div2);//true</div><div class=\"line\">div1.isSameNode(div2);//false</div></pre></td></tr></table></figure>\n<ul>\n<li>setUserData()将数据指定给节点, 它接受3个参数, 要设置的键, 实际的值(可以是任务数据类型)和处理函数, 处理函数接受5个参数, 分别表示操作类型的数值(1表示复制, 2表示导入, 3表示删除, 4表示重命名), 数据键, 数据值, 源节点和目标节点</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var div = document.createElement(&quot;div&quot;);</div><div class=\"line\">div.setUserData(&quot;name&quot;, &quot;James&quot;, function(operation, key, value, src, desc) &#123;</div><div class=\"line\">\tif (operation == 1) &#123;</div><div class=\"line\">\t\tdesc.setUserData(key, value, function() &#123;&#125;)</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;);</div><div class=\"line\">var newDiv = div.cloneNode(true);</div><div class=\"line\">newNode.getUserData(&quot;name&quot;);//James</div></pre></td></tr></table></figure>\n<h3 id=\"框架变化\"><a href=\"#框架变化\" class=\"headerlink\" title=\"框架变化\"></a>框架变化</h3><ul>\n<li>contentDocument 指向表示框架内容的文档对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var iframe = document.getElementsById(&quot;myIframe&quot;);</div><div class=\"line\">var iframeDoc = iframe.contentDocument || iframe.contentWindow.document;</div></pre></td></tr></table></figure>\n<h2 id=\"样式\"><a href=\"#样式\" class=\"headerlink\" title=\"样式\"></a>样式</h2><ul>\n<li>cssText <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var myDiv = document.getElementsByTagName(&quot;div&quot;)[0];</div><div class=\"line\">myDiv.style.cssText = &quot;font-size: 18px; background-color: red&quot;;</div></pre></td></tr></table></figure></li>\n</ul>\n"}