{"tags":[{"name":"JavaScript","permalink":"wjcun.com/tags/JavaScript/","url":"/async/tags/JavaScript.json","count":7}],"categories":[],"url":"/async/posts/2017/09/03/angular.json","date":1504408029000,"path":{"year":2017,"month":9,"day":3,"name":"angular"},"title":"angular","permalink":"wjcun.com/2017/09/03/angular/","content":"<h2 id=\"angular-module\"><a href=\"#angular-module\" class=\"headerlink\" title=\"angular.module\"></a>angular.module</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var module = angular.module(&apos;myApp&apos;, [依赖模块])</span><br></pre></td></tr></table></figure>\n<ul>\n<li>第一个参数: 模块名</li>\n<li>第二个参数: 依赖模块</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html lang=&quot;en&quot; ng-app=&quot;myApp&quot;&gt;</span><br><span class=\"line\">&lt;div ng-controller=&quot;test&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;价格: &lt;input type=&quot;text&quot; ng-model=&quot;goods.price&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;数量: &lt;input type=&quot;text&quot; ng-model=&quot;goods.amount&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;费用: &lt;span&gt;&#123;&#123;getPrice() | currency:&apos;¥&apos;&#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;运费: &lt;span&gt;&#123;&#123;goods.fee | currency:&apos;¥&apos;&#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;总价: &lt;span&gt;&#123;&#123;getPrice() + goods.fee | currency:&apos;¥&apos;&#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">var module = angular.module(&apos;myApp&apos;, []);</span><br><span class=\"line\">module.controller(&apos;test&apos;, function($timeout, $scope, $rootScope) &#123;</span><br><span class=\"line\">    $scope.goods = &#123;</span><br><span class=\"line\">        price: 5000,</span><br><span class=\"line\">        amount: 5,</span><br><span class=\"line\">        fee: 10</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $scope.getPrice = function() &#123;</span><br><span class=\"line\">        return $scope.goods.price * $scope.goods.amount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    $scope.$watch(&apos;goods&apos;, function() &#123;</span><br><span class=\"line\">        //监听到goods.pprice变化 做相应操作</span><br><span class=\"line\">        $scope.goods.fee = $scope.getPrice() &gt;= 100 ? 0 : 10;</span><br><span class=\"line\">    &#125;, true)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>为了避免压缩导致参数变化, controller的第二个参数可以变化为数组形式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function($scope, $rootScope) &#123;...&#125;</span><br><span class=\"line\">====&gt;</span><br><span class=\"line\">[&apos;$scope&apos;, &apos;$rootScope&apos;, function(p1, p2) &#123;...&#125;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>module.controller</code></li>\n<li><code>module.run([&#39;$rootScope&#39;, function(p){...}])</code><ul>\n<li>run可以不用再dom上指定ng-controller 就可以控制全局变量</li>\n</ul>\n</li>\n<li><code>module.filter</code> 自定义过滤器</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;&#123;&#123;name | myFilter&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">var module = angular.module(&apos;myApp&apos;, []);</span><br><span class=\"line\">module.filter(&apos;myFilter&apos;, function() &#123;</span><br><span class=\"line\">    return function(str) &#123;</span><br><span class=\"line\">        return str.charAt(0).toUpperCase() + str.substring(1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>module.directive</code> 自定义指令<ul>\n<li>restrict的四种定义方式 <ol>\n<li>区分大小写;</li>\n<li>可以组合使用</li>\n<li>注意驼峰转换 </li>\n</ol>\n<ul>\n<li><code>E</code>: 标签指令</li>\n<li><code>A</code>: 属性指令</li>\n<li><code>C</code>: class属性</li>\n<li><code>M</code>: 注释替换</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;my-hello&gt;&lt;/my-hello&gt;</span><br><span class=\"line\">&lt;div my-hello&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;div class=&quot;my-hello&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;!-- directive:my-hello --&gt;</span><br><span class=\"line\">module.directive(&apos;myHello&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        restrict: &apos;EACM&apos;,</span><br><span class=\"line\">        replace: true,</span><br><span class=\"line\">        transclude: true,</span><br><span class=\"line\">        controller: [&apos;$scope&apos;, function($scope) &#123;</span><br><span class=\"line\">            this.tips = &apos;hello world&apos;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        template: &apos;&lt;div&gt;Hello world &lt;h1 ng-transclude&gt;&lt;/h1&gt;&lt;/div&gt;&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<pre><code>+ place\n+ template: 模板标签\n+ templateUrl: 模板文件 会用ajax 去请求\n+ scope\n    - 为true时 指令被服用时, 作用域会独立\n    - 为`{}`时, 作用域会和全局作用域隔离开, 会使用自己的controller作用域及变量\n        + `@`: 替换为变量\n        + `=`: 替换为作用域变量(非自身controller作用域)\n        + `&amp;`: 替换为函数(非自身controller作用域)\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;my-tab aaa=&quot;div1&quot; my-name=&quot;name&quot; my-fn=&quot;show(num)&quot;&gt;&lt;/my-tab&gt;</span><br><span class=\"line\">    &lt;my-tab aaa=&quot;div2&quot; my-name=&quot;name&quot; my-fn=&quot;show(num)&quot;&gt;&lt;/my-tab&gt;</span><br><span class=\"line\">module.directive(&apos;myTab&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        restrict: &apos;E&apos;,</span><br><span class=\"line\">        replace: true,</span><br><span class=\"line\">        templateUrl: &apos;./tmp1.html&apos;,</span><br><span class=\"line\">        scope: &#123;</span><br><span class=\"line\">            myId: &apos;@aaa&apos;,</span><br><span class=\"line\">            myName: &apos;=&apos;,</span><br><span class=\"line\">            myFn: &apos;&amp;&apos;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        controller: [&apos;$scope&apos;, function($scope) &#123;</span><br><span class=\"line\">            $scope.name = &apos;mytab&apos;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        link: function(scope, element, attr) &#123;</span><br><span class=\"line\">            element.delegate(&apos;input&apos;, &apos;click&apos;, function() &#123;</span><br><span class=\"line\">                $(this).attr(&apos;class&apos;, &apos;active&apos;).siblings().attr(&apos;class&apos;, &apos;&apos;)</span><br><span class=\"line\">                $(this).siblings(&apos;div&apos;).css(&#123;&apos;display&apos;: &apos;none&apos;&#125;).siblings(&apos;div&apos;).eq($(this).index()).css(&#123;&apos;display&apos;: &apos;block&apos;&#125;)</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">//./tmp1.html</span><br><span class=\"line\">&lt;input class=&quot;active&quot; type=&quot;button&quot; value=&quot;1&quot; ng-click=&quot;myFn(&#123;num:123&#125;)&quot;&gt;</span><br></pre></td></tr></table></figure>\n<pre><code>- link: 对自身的操作\n- controller: 当对`this`挂载数据时, 就实现了与其他自定义指令, 进行数据共享\n- transclude: 当为true时保留子模板\n- require: 引入其他自定义指令\n    + `?`防止报错\n    + `^`向上级查找\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;my-hello&gt;&lt;my-hi&gt;&lt;/my-hi&gt;&lt;/my-hello&gt;</span><br><span class=\"line\">module.directive(&apos;myHello&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        restrict: &apos;EACM&apos;,</span><br><span class=\"line\">        replace: true,</span><br><span class=\"line\">        transclude: true,</span><br><span class=\"line\">        controller: [&apos;$scope&apos;, function($scope) &#123;</span><br><span class=\"line\">            this.tips = &apos;hello world&apos;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        template: &apos;&lt;div&gt;Hello world &lt;h1 ng-transclude&gt;&lt;/h1&gt;&lt;/div&gt;&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">module.directive(&apos;myHi&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        restrict: &apos;EACM&apos;,</span><br><span class=\"line\">        replace: true,</span><br><span class=\"line\">        require: &apos;?^myHello&apos;,</span><br><span class=\"line\">        template: &apos;&lt;span&gt;hi world&lt;/span&gt;&apos;,</span><br><span class=\"line\">        link: function(scope1, element1, attr, reController) &#123;</span><br><span class=\"line\">            console.log(reController.tips)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>module.config 服务商 根据配置信息用于初始化操作 <ul>\n<li>参数+Provider</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.config([&apos;$interpolateProvider&apos;, function($interpolateProvider) &#123;</span><br><span class=\"line\">    //替换标识符</span><br><span class=\"line\">    $interpolateProvider.startSymbol(&apos;@@&apos;);</span><br><span class=\"line\">    $interpolateProvider.endSymbol(&apos;@@&apos;);</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure>\n<ul>\n<li>module.factory(‘服务名’, fn) 自定义服务</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.factory(&apos;myService&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        myServiceFn: function() &#123;</span><br><span class=\"line\">            console.log(&apos;hello myService&apos;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">module.controller(&apos;test&apos;, [&apos;$scope&apos;, &apos;myService&apos;, function ($scope, myService)&#123;</span><br><span class=\"line\">    console.log(myService.myServiceFn())</span><br><span class=\"line\">&#125;]);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>module.service 支持面向对象的自定义服务</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.service(&apos;myServiceObj&apos;, myServiceObjFn);</span><br><span class=\"line\">function myServiceObjFn() &#123;</span><br><span class=\"line\">    this.name = &apos;myServiceObjFn&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">myServiceObjFn.prototype.age = 18</span><br></pre></td></tr></table></figure>\n<ul>\n<li>module.constant 自定义常量的服务</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.constant(&apos;myServiceConst&apos;, &apos;hello myServiceConst&apos;)</span><br><span class=\"line\">module.config([&apos;myServiceConst&apos;, function(myServiceConst) &#123;</span><br><span class=\"line\">    console.log(myServiceConst)</span><br><span class=\"line\">&#125;])</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>module.value 自定义常量的服务 但是不能config配置</p>\n</li>\n<li><p>module.provider(‘服务名’, fn)</p>\n<ul>\n<li>功能与factory类似, 因为factory通过这个方法封装</li>\n<li>与factory的区别是: 这个方法可以进行config服务商 进行初始化操作</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.provider(&apos;myService2&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        flag: false,</span><br><span class=\"line\">        $get: function() &#123;</span><br><span class=\"line\">            var _this = this;</span><br><span class=\"line\">            return function(num1, num2) &#123;</span><br><span class=\"line\">                var tmp = Math.random() * (num2 - num1) + num1</span><br><span class=\"line\">                return _this.flag ? Math.round(tmp) : tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">module.config([&apos;myService2Provider&apos;, function(myService2Provider) &#123;</span><br><span class=\"line\">    myService2Provider.flag = false;</span><br><span class=\"line\">&#125;])</span><br></pre></td></tr></table></figure>\n<h2 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h2><ul>\n<li>ng-app<ul>\n<li>初始化作用, 初始化模块</li>\n<li>只有在声明了ng-app区域, angular才生效 </li>\n</ul>\n</li>\n<li>ng-controller</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//常规模式</span><br><span class=\"line\">module.controller(&apos;test&apos;, [&apos;$scope&apos;, &apos;$rootScope&apos;, &apos;$filter&apos;, &apos;$interval&apos;, function($scope, $rootScope, $filter, $interval) &#123;&#125;];</span><br><span class=\"line\">&lt;div ng-controller=&quot;test&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">//面向对象形式</span><br><span class=\"line\">module.controller(&apos;test2&apos;, [&apos;$scope&apos;, fn]);</span><br><span class=\"line\">function fn() &#123;&#125;</span><br><span class=\"line\">fn.prototype.name = &apos;fnObj&apos;</span><br><span class=\"line\">&lt;div ng-controller=&quot;fn as fnObj&quot;&gt;&#123;&#123;fnObj.name&#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-click 点击事件<ul>\n<li>可以直接修改$scope上的变量 ==&gt; <code>ng-click=&quot;name=&#39;aa&#39;&quot;</code></li>\n<li>也可以在$scope上绑定一个方法再调用</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng-click=&quot;changeName()&quot;</span><br><span class=\"line\">$scope.changeName = function() &#123;</span><br><span class=\"line\">        $scope.name = &apos;name&apos;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-model 双向绑定<ul>\n<li><code>ng-model=&quot;name&quot;</code> 与name变量绑定在一起, name变量的变化会影响绑定对象</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body &gt;</span><br><span class=\"line\">    &lt;div ng-controller=&quot;test&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;价格: &lt;input type=&quot;text&quot; ng-model=&quot;goods.price&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;数量: &lt;input type=&quot;text&quot; ng-model=&quot;goods.amount&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;费用: &lt;span&gt;&#123;&#123;getPrice() | currency:&apos;¥&apos;&#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;运费: &lt;span&gt;&#123;&#123;goods.fee | currency:&apos;¥&apos;&#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;总价: &lt;span&gt;&#123;&#123;getPrice() + goods.fee | currency:&apos;¥&apos;&#125;&#125;&lt;/span&gt;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    function test($timeout, $scope, $rootScope) &#123;</span><br><span class=\"line\">        $scope.goods = &#123;</span><br><span class=\"line\">            price: 5000,</span><br><span class=\"line\">            amount: 5,</span><br><span class=\"line\">            fee: 10</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $scope.getPrice = function() &#123;</span><br><span class=\"line\">            return $scope.goods.price * $scope.goods.amount;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        $scope.$watch(&apos;goods&apos;, function() &#123;</span><br><span class=\"line\">            //监听到goods.pprice变化 做相应操作</span><br><span class=\"line\">            $scope.goods.fee = $scope.getPrice() &gt;= 100 ? 0 : 10;</span><br><span class=\"line\">        &#125;, true)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-model-option<ul>\n<li>ng-model的一些特殊处理</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//丢失光标才触发model</span><br><span class=\"line\">&lt;input ng-model=&quot;data&quot; ng-model-option=&quot;&#123;updateOn: &apos;blur&apos;&#125;&quot; /&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-repeat<ul>\n<li>$index 显示索引</li>\n<li>$first 是否第一个</li>\n<li>$last 是否最后一个</li>\n<li>middle 是否非首非尾</li>\n<li>even 是否偶数</li>\n<li>odd 是否奇数</li>\n<li>ng-repeat-start ng-ng-repat-end 两者要配合使用 数据将会在这区间有效输出</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ul&gt;</span><br><span class=\"line\">    &lt;li ng-repeat=&quot;item in items&quot;&gt;&#123;&#123;item.data&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\">$scope.items = [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            data: &apos;angular&apos;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            data: &apos;vue&apos;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            data: &apos;react&apos;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-select select框选中事件</li>\n<li>ng-change 改变事件 需要model配合</li>\n<li>ng-copy 复制事件</li>\n<li>ng-cut 剪切事件</li>\n<li>ng-paste 粘贴事件</li>\n<li>ng-disabled</li>\n<li>ng-readonly</li>\n<li>ng-checkd</li>\n<li>ng-value<ul>\n<li>使用原生value时, 当js还没执行时, 在页面上就直接显示<code></code>, 用户体验不好, 使用<code>ng-value</code>就可以避免这些问题</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">value=&quot;&#123;&#123;name&#125;&#125;&quot; ===&gt; ng-value=&quot;name&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-bind<ul>\n<li>ng-bind 与ng-value类似 都是为了提高体验, 在js还没执行时, 模板tag不会直接显示在页面上 </li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;&#123;&#123;name&#125;&#125;&gt;&gt;</span><br><span class=\"line\">//===&gt;等价于</span><br><span class=\"line\">&lt;div gn-bind=&quot;name&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-bind-templete<ul>\n<li>功能与ng-bind类似 只不过可以直接用模板</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;&#123;&#123;name&#125;&#125;,&#123;&#123;name&#125;&#125;&gt;&gt;</span><br><span class=\"line\">//===&gt;等价于</span><br><span class=\"line\">&lt;div gn-bind-templete=&quot;&#123;&#123;name&#125;&#125;,&#123;&#123;name&#125;&#125;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-bind-html<ul>\n<li>前面2个是无法解析html便签的, 但这个指令是可以解析的</li>\n<li>但是需要引入<code>ngSanitize</code>模块</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var module = angular.module(&apos;myApp&apos;, [&apos;ngSanitize&apos;]);</span><br><span class=\"line\">$scope.test = &quot;&lt;h1&gt;hello&lt;/h1&gt;&quot;</span><br><span class=\"line\">&lt;div ng-bind-html=&quot;test&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-clock<ul>\n<li>也是js未渲染完毕, 不显示便签</li>\n<li>其原理是先给样式套上<code>display:none</code>, 渲染完毕后, 再设置为<code>display:block</code></li>\n</ul>\n</li>\n<li>ng-non-bindable<ul>\n<li>不解析便签 </li>\n</ul>\n</li>\n<li>ng-class<ul>\n<li>添加class</li>\n<li>也可以使用<code>$scope</code>变量, 但变量要用<code>\\{\\{\\}\\}</code>包裹起来</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-class=&quot;&#123;class名: true, class名2: true&#125;&quot;&gt;&lt;div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-style<ul>\n<li>可以直接设置样式</li>\n<li>使用的对象方式 <code>{color: &#39;red&#39;}</code></li>\n<li>也可以使用$scope变量, 但变量要用<code>\\{\\{\\}\\}</code>包裹起来</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$scope.style = &quot;&#123;color: &apos;red&apos;, background: &apos;blue&apos;&#125;&quot;</span><br><span class=\"line\">&lt;div ng-style=&quot;&#123;&#123;style&#125;&#125;&quot;&gt;&lt;div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-href</li>\n<li>ng-src</li>\n<li>ng-attr-属性名<ul>\n<li>例如: ng-attr-id</li>\n</ul>\n</li>\n<li>ng-show 显示 <code>ng-show=&quot;true&quot;</code></li>\n<li>ng-hide 隐藏</li>\n<li>ng-if<ul>\n<li>功能和<code>ng-show</code>类似</li>\n<li>但是<code>ng-if</code>是对dom进行增删操作 </li>\n</ul>\n</li>\n<li>ng-switch</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;checkbox&quot; name=&quot;&quot; ng-model=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">&lt;div ng-switch on=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">    &lt;p ng-switch-default&gt;ng-switch-default&lt;/p&gt;</span><br><span class=\"line\">    &lt;p ng-switch-when=&quot;false&quot;&gt;ng-switch-when&lt;/p&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-open 与detail关联使用</li>\n<li>ng-init 初始化变量, 不用先在$scope上挂载</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-init=&quot;init=&apos;hello&apos;&quot;&gt;&#123;&#123;init&#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ng-include 引入其他 模块</li>\n</ul>\n<h3 id=\"angular重装标签\"><a href=\"#angular重装标签\" class=\"headerlink\" title=\"angular重装标签\"></a>angular重装标签</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var module = angular.module(&apos;myApp&apos;, [&apos;ngSanitize&apos;]);</span><br><span class=\"line\">module.controller(&apos;test2&apos;, [&apos;$scope&apos;, fn]);</span><br><span class=\"line\">function fn() &#123;&#125;</span><br><span class=\"line\">fn.prototype.colors = [</span><br><span class=\"line\">    &#123;name: &apos;red&apos;&#125;,</span><br><span class=\"line\">    &#123;name: &apos;yellow&apos;&#125;,</span><br><span class=\"line\">    &#123;name: &apos;blue&apos;&#125;,</span><br><span class=\"line\">]</span><br><span class=\"line\">&lt;div ng-controller=&quot;fn as fnObj&quot;&gt;</span><br><span class=\"line\">    &lt;a href=&quot;&quot;&gt;&#123;&#123;myColor.name&#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">    &lt;select ng-options=&quot;color.name for color in fnObj.colors&quot; ng-model=&quot;myColor&quot;&gt;&lt;/select&gt;</span><br><span class=\"line\">    &lt;form name=&quot;myForm&quot;&gt;</span><br><span class=\"line\">        &lt;input type=&quot;email&quot; ng-model=&quot;fnObj.name&quot; name=&quot;myInput&quot;&gt;</span><br><span class=\"line\">        &lt;p&gt;验证通过: &#123;&#123;myForm.myInput.$valid&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;验证不通过: &#123;&#123;myForm.myInput.$invalid&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;初始值: &#123;&#123;myForm.myInput.$pristine&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;修改过: &#123;&#123;myForm.myInput.$dirty&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">        &lt;p&gt;有错误: &#123;&#123;myForm.myInput.$error&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><ul>\n<li>angluar是依赖注入, 所有它传递的形参名称不能修改</li>\n<li>参数顺序可以改变</li>\n</ul>\n<h3 id=\"scope\"><a href=\"#scope\" class=\"headerlink\" title=\"$scope\"></a>$scope</h3><ul>\n<li>局部作用域</li>\n<li>只有在绑定的ng-controller区域才可以使用</li>\n<li>挂载这个对象上的变量, 才能在模板里显示</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;div ng-controller=&quot;test&quot;&gt;</span><br><span class=\"line\">        &#123;&#123;name&#125;&#125;</span><br><span class=\"line\">    &lt;/div&gt;    </span><br><span class=\"line\">    &#123;&#123;age&#125;&#125;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\">    function test($scope, $rootScope) &#123;</span><br><span class=\"line\">        $scope.name = &apos;lc&apos;</span><br><span class=\"line\">        $rootScope.age = 18</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"scope-watch\"><a href=\"#scope-watch\" class=\"headerlink\" title=\"$scope.$watch\"></a>$scope.$watch</h4><ul>\n<li>监听器</li>\n<li>第一个参数 监听对象</li>\n<li>第二个参数 监听触发的回调函数<ul>\n<li>回调函数带有3个参数</li>\n<li>第一个参数, 新的变量值</li>\n<li>第二个参数, 旧的变量值 </li>\n</ul>\n</li>\n<li>第三个参数 boolen 是否深度监听, 也就是说对象里面的子变量或子对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$scope.$watch(&apos;goods.price&apos;, function() &#123;</span><br><span class=\"line\">    //监听到对象变化 做相应操作</span><br><span class=\"line\">&#125;, true)</span><br></pre></td></tr></table></figure>\n<h4 id=\"scope-apply\"><a href=\"#scope-apply\" class=\"headerlink\" title=\"$scope.$apply\"></a>$scope.$apply</h4><ul>\n<li>一般情况下, setTimeout是没法生效的, 必须使用$timeout, 但是使用$scope.$apply, setTimeout就可以生效</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setTimeout(function() &#123;</span><br><span class=\"line\">        $scope.$apply(function() &#123;</span><br><span class=\"line\">            $scope.goods.amount = 100</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;, 1000)</span><br></pre></td></tr></table></figure>\n<h3 id=\"rootScope\"><a href=\"#rootScope\" class=\"headerlink\" title=\"$rootScope\"></a>$rootScope</h3><ul>\n<li>全局作用域</li>\n<li>挂载在这个对象上的变量, 在全局可生效</li>\n</ul>\n<h3 id=\"timeout\"><a href=\"#timeout\" class=\"headerlink\" title=\"$timeout\"></a>$timeout</h3><ul>\n<li>功能和setTimeout相似, 但setTimeout无法修改angular变量现实双向绑定</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$timeout(function() &#123;</span><br><span class=\"line\">            $scope.name = &apos;ll&apos;</span><br><span class=\"line\">        &#125;, 1000)</span><br></pre></td></tr></table></figure>\n<h3 id=\"interval\"><a href=\"#interval\" class=\"headerlink\" title=\"$interval\"></a>$interval</h3><ul>\n<li>$interval.cancel(timer)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var timer = $interval(function() &#123;</span><br><span class=\"line\">        $scope.text = iNow + &apos;秒&apos;;</span><br><span class=\"line\">        if (! iNow --) &#123;</span><br><span class=\"line\">            $scope.text = &apos;搜索&apos;;</span><br><span class=\"line\">            $scope.isDisabled = false</span><br><span class=\"line\">            $interval.cancel(timer)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, 1000);</span><br></pre></td></tr></table></figure>\n<h3 id=\"filter-过滤器\"><a href=\"#filter-过滤器\" class=\"headerlink\" title=\"$filter 过滤器\"></a>$filter 过滤器</h3><ul>\n<li><code>$filter(&#39;过滤器名&#39;).(操作对象, 过滤器参数...)</code></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert($filter(&apos;uppercase&apos;)(&apos;hello&apos;)</span><br><span class=\"line\">alert($filter(&apos;limitTo&apos;)(&apos;hello&apos;, 2))</span><br></pre></td></tr></table></figure>\n<h3 id=\"http-类似ajax的http请求\"><a href=\"#http-类似ajax的http请求\" class=\"headerlink\" title=\"$http 类似ajax的http请求\"></a>$http 类似ajax的http请求</h3><ul>\n<li>当<code>method: &#39;jsonp&#39;</code>时, <code>JSON_CALLBACK</code>为回调函数名</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$scope.searchByBaidu = function() &#123;</span><br><span class=\"line\">    $timeout.cancel(timer);</span><br><span class=\"line\">    $timeout(function () &#123;</span><br><span class=\"line\">        $http(&#123;</span><br><span class=\"line\">            method: &apos;jsonp&apos;,</span><br><span class=\"line\">            url: &apos;https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=&apos; + $scope.searchData + &apos;&amp;json=1&amp;cb=JSON_CALLBACK&apos;</span><br><span class=\"line\">        &#125;).success(function(data, state, headers, config) &#123;</span><br><span class=\"line\">            console.log(data)</span><br><span class=\"line\">            $scope.searchResult = data.g</span><br><span class=\"line\">        &#125;).error(function(err) &#123;</span><br><span class=\"line\">            console.log(err)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;, 500);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"location-对location的封装\"><a href=\"#location-对location的封装\" class=\"headerlink\" title=\"$location 对location的封装\"></a>$location 对location的封装</h3><ul>\n<li><code>$location.path(&#39;aaa/bbb&#39;)</code> 在hash后面设置路径</li>\n</ul>\n<h3 id=\"anchorScroller-锚点跳转\"><a href=\"#anchorScroller-锚点跳转\" class=\"headerlink\" title=\"$anchorScroller 锚点跳转\"></a>$anchorScroller 锚点跳转</h3><h3 id=\"cacheFactory-缓存工具\"><a href=\"#cacheFactory-缓存工具\" class=\"headerlink\" title=\"cacheFactory 缓存工具\"></a>cacheFactory 缓存工具</h3><ul>\n<li>info() 缓存信息</li>\n<li>get(key) 获取缓存</li>\n<li>put(key, val) 存储缓存</li>\n<li>remove(key)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var cache = $cacheFactory(&apos;myCache&apos;, &#123;capacity: 1&#125;) // capacity 缓存最大空间</span><br><span class=\"line\">cache.put(&apos;name&apos;, &apos;lc&apos;)</span><br><span class=\"line\">cache.put(&apos;age&apos;, &apos;18&apos;)</span><br><span class=\"line\">console.log(cache.info, cache.get(&apos;name&apos;), cache.get(&apos;age&apos;))</span><br></pre></td></tr></table></figure>\n<h3 id=\"log-功能与console类似\"><a href=\"#log-功能与console类似\" class=\"headerlink\" title=\"$log 功能与console类似\"></a>$log 功能与console类似</h3><h3 id=\"interpolate-插值替换\"><a href=\"#interpolate-插值替换\" class=\"headerlink\" title=\"$interpolate 插值替换\"></a>$interpolate 插值替换</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input type=&quot;text&quot;  ng-model=&quot;name&quot;&gt;</span><br><span class=\"line\">&lt;textarea ng-model=&quot;body&quot;&gt;&lt;/textarea&gt;</span><br><span class=\"line\">&lt;p&gt;&#123;&#123;showBodyContent&#125;&#125;&lt;/p&gt;</span><br><span class=\"line\">$scope.$watch(&apos;body&apos;, function(newBody) &#123;</span><br><span class=\"line\">    if (newBody) &#123;</span><br><span class=\"line\">        //解析新内容</span><br><span class=\"line\">        var template = $interpolate(newBody);</span><br><span class=\"line\">        //将内容中的name替换为$scope中的name</span><br><span class=\"line\">        $scope.showBodyContent = template(&#123;name: $scope.name&#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"q-跟jquery的primise类似\"><a href=\"#q-跟jquery的primise类似\" class=\"headerlink\" title=\"$q 跟jquery的primise类似\"></a>$q 跟jquery的primise类似</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var dfd = $q.defer();</span><br><span class=\"line\">function getPromise() &#123;</span><br><span class=\"line\">    setTimeout(function() &#123;</span><br><span class=\"line\">        if (Math.random() &gt; 0.5) &#123;</span><br><span class=\"line\">            dfd.reject()</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            dfd.resolve();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, 2000);</span><br><span class=\"line\">    return dfd.promise;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">getPromise().then(function() &#123;</span><br><span class=\"line\">    console.log(&apos;success&apos;)</span><br><span class=\"line\">&#125;, function() &#123;</span><br><span class=\"line\">    console.log(&apos;error&apos;)</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"angular-工具方法\"><a href=\"#angular-工具方法\" class=\"headerlink\" title=\"angular 工具方法\"></a>angular 工具方法</h2><h3 id=\"angular-bind\"><a href=\"#angular-bind\" class=\"headerlink\" title=\"angular.bind\"></a>angular.bind</h3><ul>\n<li>功能与$.proxy类似</li>\n</ul>\n<h3 id=\"angular-extend\"><a href=\"#angular-extend\" class=\"headerlink\" title=\"angular.extend\"></a>angular.extend</h3><ul>\n<li>功能与$.extend 类似</li>\n</ul>\n<h3 id=\"angular-copy\"><a href=\"#angular-copy\" class=\"headerlink\" title=\"angular.copy\"></a>angular.copy</h3><ul>\n<li>复制功能 </li>\n</ul>\n<h3 id=\"angular-equals-a-b\"><a href=\"#angular-equals-a-b\" class=\"headerlink\" title=\"angular.equals(a, b)\"></a>angular.equals(a, b)</h3><ul>\n<li>这个比较与原生的有所不同</li>\n<li>这个方法只要比较的两者值一样就相同, 比如NaN</li>\n</ul>\n<h3 id=\"angular-forEach\"><a href=\"#angular-forEach\" class=\"headerlink\" title=\"angular.forEach()\"></a>angular.forEach()</h3><ul>\n<li>接受3个参数, 前2个参数和$一样</li>\n<li>第三个参数, 可以接受新值</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var arr = [&apos;a&apos;, &apos;b&apos;]</span><br><span class=\"line\">var result = []</span><br><span class=\"line\">angular.forEach(arr, function(val, key)&#123;</span><br><span class=\"line\">    this.push(key + val)</span><br><span class=\"line\">&#125;, result)</span><br><span class=\"line\">console.log(result)// [&quot;0a&quot;, &quot;1b&quot;]</span><br></pre></td></tr></table></figure>\n<h3 id=\"angular-fromJson\"><a href=\"#angular-fromJson\" class=\"headerlink\" title=\"angular.fromJson\"></a>angular.fromJson</h3><ul>\n<li>将字符串转换为json</li>\n</ul>\n<h3 id=\"angular-toJson\"><a href=\"#angular-toJson\" class=\"headerlink\" title=\"angular.toJson\"></a>angular.toJson</h3><ul>\n<li>将json转换为字符串</li>\n<li>第二个参数为true的话, json对象会被格式化</li>\n</ul>\n<h3 id=\"angular-element\"><a href=\"#angular-element\" class=\"headerlink\" title=\"angular.element\"></a>angular.element</h3><ul>\n<li>小型jquery</li>\n</ul>\n<h3 id=\"angular-bootstarp\"><a href=\"#angular-bootstarp\" class=\"headerlink\" title=\"angular.bootstarp\"></a>angular.bootstarp</h3><ul>\n<li>手动进行初始化, 与ng-app功能类似</li>\n<li>但ng-app一个页面只能有一次初始化; 而bootstrap 可以进行多次初始化操作</li>\n<li><code>angular.bootstarp(dom对象, module模块名)</code><ul>\n<li>第一个参数, 在哪个dom对象上初始化</li>\n<li>第二个参数, module的模块名</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h2><blockquote>\n<p>可以使用管道方式调用多个过滤器 如: num | limitTo: 2 | uppercase</p>\n</blockquote>\n<ul>\n<li><code>currency:&#39;¥&#39;</code> 货币过滤器<ul>\n<li><code>\\{\\{goods.price * goods.amount | currency\\}\\}</code> <code>| currency</code>是过滤器, 转换为货币格式</li>\n</ul>\n</li>\n<li>number 每3位一个逗号</li>\n<li>uppercase/lowercase</li>\n<li>json 将json格式化</li>\n<li>limitTo:1 截取数组或者字符串</li>\n<li>date: ‘yyyy-mm-dd’ 转换为时间</li>\n<li>orderBy:排序属性:是否逆序  排序对象</li>\n<li>filter:值 过滤数据, 仅剩下含有此值的数据 </li>\n</ul>\n<h2 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h2><ul>\n<li>$emit 冒泡传播</li>\n<li>$broadcast 捕捉传播</li>\n<li>event.stopPropagation 阻止事件传播</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-controller=&quot;testPropagation&quot;&gt;</span><br><span class=\"line\">    &#123;&#123;count&#125;&#125;</span><br><span class=\"line\">    &lt;div ng-controller=&quot;testPropagation&quot; ng-click=&quot;$emit(&apos;myEventInc&apos;);$broadcast(&apos;myEventDes&apos;)&quot;&gt;</span><br><span class=\"line\">        &#123;&#123;count&#125;&#125;</span><br><span class=\"line\">        &lt;div ng-controller=&quot;testPropagation&quot;&gt;</span><br><span class=\"line\">            &#123;&#123;count&#125;&#125;</span><br><span class=\"line\">        &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">module.controller(&apos;testPropagation&apos;, function($scope) &#123;</span><br><span class=\"line\">    $scope.count = 0;</span><br><span class=\"line\">    $scope.$on(&apos;myEventInc&apos;, function(event) &#123;</span><br><span class=\"line\">        $scope.count ++;</span><br><span class=\"line\">        // event.stopPropagation() //阻止事件传播</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    $scope.$on(&apos;myEventDes&apos;, function(event) &#123;</span><br><span class=\"line\">        $scope.count --</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><h3 id=\"ng-route\"><a href=\"#ng-route\" class=\"headerlink\" title=\"ng-route\"></a>ng-route</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div ng-controller=&quot;myController&quot;&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot; ng-click=&quot;$location.path(&apos;/aaa/123&apos;)&quot;&gt;首页123&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;&quot; ng-click=&quot;$location.path(&apos;/aaa/345&apos;)&quot;&gt;首页345&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;#bbb&quot;&gt;内容&lt;/a&gt;</span><br><span class=\"line\">        &lt;a href=&quot;#ccc&quot;&gt;关于&lt;/a&gt;</span><br><span class=\"line\">        &lt;div ng-view&gt;&lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">var module = angular.module(&apos;myApp&apos;, [&apos;ngRoute&apos;]);</span><br><span class=\"line\">module.config([&apos;$routeProvider&apos;, function($routeProvider) &#123;</span><br><span class=\"line\">    $routeProvider</span><br><span class=\"line\">    .when(&apos;/aaa/:num&apos;, &#123;</span><br><span class=\"line\">        template: &apos;&lt;div&gt;首页内容&lt;/div&gt;&#123;&#123;name&#125;&#125;&apos;,</span><br><span class=\"line\">        controller: &apos;aaa&apos;</span><br><span class=\"line\">    &#125;).when(&apos;/bbb&apos;, &#123;</span><br><span class=\"line\">        template: &apos;&lt;div&gt;内容部分&lt;/div&gt;&#123;&#123;name&#125;&#125;&apos;,</span><br><span class=\"line\">        controller: &apos;bbb&apos;</span><br><span class=\"line\">    &#125;).when(&apos;/ccc&apos;, &#123;</span><br><span class=\"line\">        template: &apos;&lt;div&gt;关于内容&lt;/div&gt;&#123;&#123;name&#125;&#125;&apos;,</span><br><span class=\"line\">        controller: &apos;ccc&apos;</span><br><span class=\"line\">    &#125;).otherwise(&#123;</span><br><span class=\"line\">        redirectTo: &apos;/aaa/123&apos;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;])</span><br><span class=\"line\">module.run([&apos;$rootScope&apos;, function($rootScope) &#123;</span><br><span class=\"line\">    $rootScope.$on(&apos;$routeChangeStart&apos;, function(event, current, prev) &#123;</span><br><span class=\"line\">        console.log(event, current, prev)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;])</span><br><span class=\"line\">module.controller(&apos;myController&apos;, function($scope, $location, $routeParams) &#123;</span><br><span class=\"line\">    $scope.$location = $location;</span><br><span class=\"line\">    console.log($routeParams)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">module.controller(&apos;aaa&apos;, function($scope) &#123;</span><br><span class=\"line\">    $scope.name = &apos;aaa&apos;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">module.controller(&apos;bbb&apos;, function($scope) &#123;</span><br><span class=\"line\">    $scope.name = &apos;bbb&apos;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">module.controller(&apos;ccc&apos;, function($scope) &#123;</span><br><span class=\"line\">    $scope.name = &apos;ccc&apos;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ngAnimate\"><a href=\"#ngAnimate\" class=\"headerlink\" title=\"ngAnimate\"></a>ngAnimate</h3><ul>\n<li>对dom增删动画<ul>\n<li>ng-enter</li>\n<li>ng-enter-active</li>\n<li>ng-leave</li>\n<li>ng-leave-active</li>\n</ul>\n</li>\n<li>对dom隐藏或显示<ul>\n<li>ng-hide-remove</li>\n<li>ng-hide-remove-active</li>\n<li>ng-hide-add</li>\n<li>ng-hide-add-active<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: red;</span><br><span class=\"line\">    transition: 1s all;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box.ng-enter &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box.ng-enter-active &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box.ng-leave &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.box.ng-leave-active &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>enter</li>\n<li>leave</li>\n<li>addClass</li>\n<li>removeClass</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;box&quot; ng-if=&quot;checkbox&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">module.animation(&apos;.box&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        enter: function(element, callback) &#123;</span><br><span class=\"line\">            console.log(element, callback)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        leave: function(element, callback) &#123;</span><br><span class=\"line\">            console.log(element, callback)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">&lt;div class=&quot;box&quot; ng-show=&quot;checkbox&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">module.animation(&apos;.box&apos;, function() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">        addClass: function(element, aclass, callback) &#123;</span><br><span class=\"line\">            console.log(element, aclass, callback)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        removeClass: function(element, aclass, callback) &#123;</span><br><span class=\"line\">            console.log(element, aclass, callback)</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ngResource-大型资源请求-跟-http类似\"><a href=\"#ngResource-大型资源请求-跟-http类似\" class=\"headerlink\" title=\"ngResource 大型资源请求 跟$http类似\"></a>ngResource 大型资源请求 跟$http类似</h3><ul>\n<li>get() get请求</li>\n<li>query() 数组类似数据</li>\n<li>save() post请求</li>\n<li>delete()</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 初始化对象, 第一个参数是请求地址 第二个是字符替换, 第三个是初始化配置</span><br><span class=\"line\">var obj = $resource(&apos;:name.:format&apos;, &#123;format: &apos;json&apos;&#125;, &#123;&#125;);</span><br><span class=\"line\">obj.get(&#123;name: &apos;lisi&apos;&#125;, function()&#123;alert(&apos;success&apos;)&#125;, function()&#123;alert(&apos;error&apos;);&#125;)</span><br></pre></td></tr></table></figure>"}